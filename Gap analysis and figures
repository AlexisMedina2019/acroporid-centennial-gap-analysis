rm(list=ls(all=TRUE))
getwd()
library(readxl)
library(dplyr)
library(ggplot2)
library(patchwork)
library(plotly)

# READING AGE INFORMATION   
data<-read_excel("raw_ages.xlsx")
data_mx<-data[data$source=="This paper" & data$group=="palmata",c(10:12)]
data_mx_f<-data[data$source=="This paper",c(9:12)]

#selecting appropiate bandwidth value
library(stats)
# Appliying Unbiased Cross-Validation (UCV) method
#to select the optimal bandwidth for kernel density
bw_mx_ucv <- bw.ucv(data_mx$t_ka)
bw_mx_ucv
# Calcular la densidad con el ancho de banda seleccionado por el mÃ©todo de Sheather y Jones
pdf0_mx_ucv <- density(data_mx$t_ka, bw = bw_mx_ucv)
#Selecting Apal age data from the dataset (this paper)

#  MEXICO (PUNTA MAROMA) AGE DISTRIBUTION UNCERTAINTIES ANALYSIS 

data1<-data[data$source=="This paper"  & #& datos$subgroup!="core"
                data$group=="palmata",10]
#checking data
colnames(data1)
#calculating density estimates for the apal ages
pdf0<-density(data1$t_ka,bw=0.09,from=-0.1,to=6)
#ploting KDE 
plot(pdf0,xlim=c(-0.1,6),ylim=c(0,1.2))
# randomly sampling test
pdf25_1<-density(data1$t_ka[sample(1:51,25)],bw=0.09,from=-0.1,to=6)
b<-pdf0$x[2]-pdf0$x[1]
sum(abs(pdf0$y-pdf25_1$y)*b)/2

# Creating a function to generate densities with different sample sizes 
generar_densidades <- function(datos, inicio = 36, fin = 64) {
# Creating empty list to store results
  lista_densidades <- list()
# Loop for each sample size
  for(n in seq(inicio, fin, by = 4)) {
# generating Sample 
    muestra <- datos[sample(1:length(datos), n)]
# Calculating density
    densidad <- density(muestra, bw = 0.09, from = -0.1, to = 6)
# Storing densities 
    lista_densidades[[paste0("pdf", n)]] <- densidad
  }
# return densities list
  return(lista_densidades)
}
# function use
densidades <- generar_densidades(data1$t_ka)
# empty dataframe
df_densidades <- data.frame()
# density loop
for(i in names(densidades)) {
# temporal dataframe
  df_temp <- data.frame(x = densidades[[i]]$x, y = densidades[[i]]$y, group = i)
# adding temporal to main dataframe
  df_densidades <- rbind(df_densidades, df_temp)
}

#Evaluating uncertainties in densities
# Empty dataframe to store density differences
df_diferencias <- data.frame()

# Creating a loop for each density on the list
for(i in names(densidades)) {
  # Creating temporal dataframe to store delta densities
  df_temp <- data.frame(x = pdf0$x, y = pdf0$y - densidades[[i]]$y, group = i)
  
  # Adding temporal dataframe with delta densities to the main dataframe
  df_diferencias <- rbind(df_diferencias, df_temp)
}

library(paletteer)
colores <- paletteer_c("ggthemes::Gray", 30)
colores2<-paletteer_c("ggthemes::Orange", 30)
colores3<- paletteer_c("ggthemes::Red-Black Diverging", 30)

p1 <- ggplot(df_diferencias, aes(x = x, y = y, fill = group)) +
  annotate("rect", xmin = 0.71, xmax = 1.44, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") + 
  annotate("rect", xmin = 1.46, xmax = 1.81, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") +
  annotate("rect", xmin = 2.47, xmax = 2.88, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") +
  annotate("rect", xmin = 4.97, xmax = 5.46, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778")+
  geom_area(alpha = 0.5) +
  scale_fill_manual(values = colores2) +
  labs(x = "age(ka)", y = "Density uncertainties", fill = "Group") +
  coord_cartesian(xlim = c(-0.1, 6))+
  theme_bw()+
  theme(legend.position = "none") #,axis.text.x = element_blank(), axis.ticks.x = element_blank(),axis.title.x = element_blank())

p1

# NULL MODEL FOR THEORETHICAL GAP UNCERTAINTIES  
#Corresponds to Supp.figure 4, Results

#gaP Function:The gaP function estimates the probability of obtaining gaps larger than a specified threshold 
#based on a random selection of dates.

#Parameters:
#  n: Number of random dates.
#  from and to: Limits of the age interval for which probabilities are estimated.
#  bw: Bandwidth of the Kernel estimation.
#  alpha: Complement of confidence; densities below this probability are classified as gaps.
#  threshold: Minimum gap span.

# Steps:
  # 1) Generate n random values uniformly distributed between from and to.
  # 2) Compute the kernel density estimate (pdf1) of these values with bandwidth bw.
  # 3) Calculate the minimum density threshold (d_min) based on alpha.
  # 4) Identify intervals where the density exceeds d_min.
  # 5) Compute the gaps between consecutive intervals.
  # 6) Return the total count of gaps exceeding the specified threshold and the gap lengths.


gaP<-function(n,from,to,bw,alpha,threshold=350){
  s1<-runif(n,min=from,max=to)
  pdf1<-density(s1,bw=bw)
  d_min<-alpha/(to-from)
  t1<-cbind(1:512,pdf1$x,pdf1$y)[pdf1$y>d_min,]
  gaps<-t1[-1,1]-t1[-nrow(t1),1]
  gaps<-gaps[which(gaps!=1)]*(to-from)/512
  result<-list(sum(gaps>threshold),gaps)
  return(result)
}

# example usage:
gaP(30,0,6000,100,alpha=0.05)

gaPs<-function(n,from,to,bw,alpha,threshold=350,N=1000){
  occurrences<-vector()
  for(i in 1:N){
    occurrences[[i]]<-gaP(n,from,to,bw,alpha,threshold=threshold)[[1]]
  }
  return(table(occurrences))
}

gaPs(30,0,6000,100,alpha=0.05)

color<-colorRampPalette(c("#FFFFFF","#DAC778"))(100)

gaPs1<-function(n1,n2,from,to,bw,alpha=0.05,threshold=350,N=1000){
  occurrences1<-list()
  occurrences2<-matrix(ncol=5,nrow=(n2-n1+1))
  for(i in n1:n2){
    occurrences1[[i-n1+1]]<-gaPs(i,from,to,bw,alpha,
                                 threshold=threshold,N=1000)
    occurrences2[i-n1+1,
                 1:length(occurrences1[[i-n1+1]])]<-occurrences1[[i-n1+1]]
  }
  rownames(occurrences2)<-n1:n2
  occurrences2<-ifelse(is.na(occurrences2),0,occurrences2)
  occurrences2<-t(apply(occurrences2,1,function(x) x/sum(x)))
  image(n1:n2,0:(ncol(occurrences2)-1),occurrences2,col=color,xlab="n",
        ylab=paste("Number of gaps > ",threshold),
        main=paste("P(Number of gaps > ",threshold," | n)"))
  legend("topright",legend=seq(10,100,10)/100,
         col=color[seq(10,100,10)],pch=15,title="Probability",bg="white",cex=0.8)
  return(occurrences2)
}

par(mfrow=c(2,1))
gaPs1(n1=10,n2=100,0,6000,100,alpha=0.05,N=10000)
gaPs1(n1=10,n2=100,0,6000,100,alpha=0.05,threshold=750,N=10000)

# ASSESSING SAMPLE SIZE IMPACT MEXICO (PUNTA MAROMA) ANALYSIS    

#Accessing resampling related uncertainties
desajuste<-matrix(ncol=1000,nrow=55)
for(j in 1:nrow(desajuste)){
  for(i in 1:ncol(desajuste)){
    desajuste[j,i]<-sum(abs(pdf0$y - 
                              density(data1$t_ka[sample(1:64,(j+9))],bw=0.09,from=-0.1,to=6)$y)*b)/2
  }
}

dim(desajuste)
# Create a new data frame for plotting PUMA age densities
df <- data.frame(
  x = 1:55,
  mean = apply(desajuste, 1, mean),
  q25 = apply(desajuste, 1, quantile, 0.25),
  q75 = apply(desajuste, 1, quantile, 0.75),
  q025 = apply(desajuste, 1, quantile, 0.025),
  q975 = apply(desajuste, 1, quantile, 0.975)
)

D<-ggplot(df, aes(x = x, y = mean)) +
  geom_ribbon(aes(ymin = q025, ymax = q975), alpha = 0.1) +
  geom_ribbon(aes(ymin = q25, ymax = q75), alpha = 0.4) +
  geom_point(shape = 16) +
  labs(x = "resamples", y = "mean") +
  scale_x_continuous(breaks = seq(0, 60, by = 10)) +
  scale_y_continuous(limits = c(0, 0.55)) +
  theme_bw()+
  geom_hline(yintercept = 0.1, color = "black", linetype = "dashed")+
  annotate("rect", xmin = 37, xmax = 55, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "lightgreen")
D


# ST CROIX POOLED DATA ANALYSIS  AND  BARBADOS AGE UNCERTAINTIES DATA ANALYSIS 
# St. Croix corresponds to age information published by Hubbard et al, 2005 (Lang Bank) and Hubbard et al, 2013 (Buck Island)
# Barbados corresponds to age information published by Abdul et al, 2016 

datascx<-data[data$source=="Hubbard et al.,05;13" &
                  data$group=="palmata",c(10:12)]
# Appliying Unbiased Cross-Validation (UCV) method
#to select the optimal bandwidth for kernel density
bw_sc_ucv <- bw.ucv(datascx$t_ka)
bw_sc_ucv
# Note. low resolution of data penalises with a large bandwidth so instead of using calculated bandwidth
# We use the bandwidth corresponding to high-resolution data from Mexico Punta Maroma, settled around centennial (0.0889)

pdf0_sc_ucv <- density(datascx$t_ka, bw = 0.09) 

data_sc<-data[data$source=="Hubbard et al.,05;13" &
                  data$group=="palmata",10]


pdf0sc<-density(data_sc$t_ka,bw=0.09,from=-0.1,to=10)
pdf25sc_1<-density(data_sc$t_ka[sample(1:52,25)],bw=0.09,from=-0.1,to=10)
bs<-pdf0sc$x[2]-pdf0sc$x[1]
sum(abs(pdf0sc$y-pdf25sc_1$y)*bs)/2
# Creating a function to generate densities with different sample sizes 
generar_densidades_sc <- function(datos, inicio = 5, fin = 52) {
  # Creating an empty list to store results
  lista_densidades_sc <- list()
  
  # Loop for each sample size
  for(n in seq(inicio, fin, by = 5)) {
    # generating Sample 
    muestra <- datos[sample(1:length(datos), n)]
    
    # Calculating density
    densidad_sc <- density(muestra, bw = 0.09, from = -0.1, to = 10)
    
    # Storing densities 
    lista_densidades_sc[[paste0("pdf", n)]] <- densidad_sc
  }
  
  # return densities list
  return(lista_densidades_sc)
}
# function use
densidades_sc <- generar_densidades_sc(data_sc$t_ka)

# empty dataframe
df_densidades_sc <- data.frame()

# density loop
for(i in names(densidades_sc)) {
  # temporal dataframe
  df_temp_sc <- data.frame(x = densidades_sc[[i]]$x, y = densidades_sc[[i]]$y, group = i)
  
  # adding temporal to main dataframe
  df_densidades_sc <- rbind(df_densidades_sc, df_temp_sc)
}

#Evaluating uncertainties in densities
# Empty data frame to store density differences
df_diferencias_sc <- data.frame()

# Creating a loop for each density on the list
for(i in names(densidades_sc)) {
  # Creating temporal dataframe to store delta densities
  df_temp_sc<- data.frame(x = pdf0sc$x, y = pdf0sc$y - densidades_sc[[i]]$y, group = i)
  
  # Adding temporal dataframe with delta densities to the main dataframe
  df_diferencias_sc <- rbind(df_diferencias_sc, df_temp_sc)
}

p1_sc <- ggplot(df_diferencias_sc, aes(x = x, y = y, fill = group)) +
  annotate("rect", xmin = 2, xmax = 3.395, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") + 
  annotate("rect", xmin = 3.405, xmax = 4.5, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") +
  annotate("rect", xmin = 5.2, xmax = 5.9, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") +
  geom_area(alpha = 0.5) +
  scale_fill_manual(values = colores) +
  labs(x = "age (ka)", y = "Density uncertainties", fill = "Group") +
  coord_cartesian(xlim = c(-0.1, 10))+
  theme_bw()+
  theme(legend.position = "none")
p1_sc

# BARBADOS HIGH-RESOLUTION AGE UNCERTAINTIES ANALYSIS

databx<-data[data$source=="Abdul et al.,16" &
                 data$group=="palmata",c(10:12)]
# Appliying 381 (UCV) method
#to select the optimal bandwidth for kernel density
bw_b_ucv <- bw.ucv(databx$t_ka)
bw_b_ucv
pdf0_b_ucv <- density(databx$t_ka, bw = bw_b_ucv)
data_barbados<-data[data$source=="Abdul et al.,16" &
                        data$group=="palmata",10]

pdf0b<-density(data_barbados$t_ka,bw=0.096,from=9,to=14)
pdf25b_1<-density(data_barbados$t_ka[sample(1:105,25)],bw=0.096,from=9,to=14)
bb<-pdf0b$x[2]-pdf0b$x[1]
sum(abs(pdf0b$y-pdf25b_1$y)*bb)/2

# Creating a function to generate densities with different sample sizes 
generar_densidades_b <- function(datos, inicio = 5, fin = 100) {
  # Creating an empty list to store results
  lista_densidades_b <- list()
  
  # Loop for each sample size
  for(n in seq(inicio, fin, by = 5)) {
    # generating Sample 
    muestra <- datos[sample(1:length(datos), n)]
    
    # Calculating density
    densidad_b <- density(muestra, bw = 0.09, from = 9, to = 14)
    
    # Storing densities 
    lista_densidades_b[[paste0("pdf", n)]] <- densidad_b
  }
  
  # return densities list
  return(lista_densidades_b)
}
# function use
densidades_b <- generar_densidades_b(data_barbados$t_ka)

# empty dataframe
df_densidades_b <- data.frame()

# density loop
for(i in names(densidades_b)) {
  # temporal dataframe
  df_temp_b <- data.frame(x = densidades_b[[i]]$x, y = densidades_b[[i]]$y, group = i)
  
  # adding temporal to main dataframe
  df_densidades_b <- rbind(df_densidades_b, df_temp_b)
}

#Evaluating uncertainties in densities
# Empty data frame to store density differences
df_diferencias_b <- data.frame()

# Creating a loop for each density on the list
for(i in names(densidades_b)) {
  # Creating temporal dataframe to store delta densities
  df_temp_b <- data.frame(x = pdf0b$x, y = pdf0b$y - densidades_b[[i]]$y, group = i)
  
  # Adding temporal dataframe with delta densities to the main dataframe
  df_diferencias_b <- rbind(df_diferencias_b, df_temp_b)
}


p1_b <- ggplot(df_diferencias_b, aes(x = x, y = y, fill = group)) +
  annotate("rect", xmin = 10, xmax = 10.35, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") + 
  annotate("rect", xmin = 11, xmax = 11.27, ymin = -Inf, ymax = Inf, alpha = 0.15, fill = "#DAC778") +
  geom_area(alpha = 0.5) +
  scale_fill_manual(values = colores) +
  labs(x = "age (ka)", y = "Density uncertainties", fill = "Group") +
  coord_cartesian(xlim = c(9,14))+
  theme_bw()+
  theme(legend.position = "none")
p1_b

#plotting gap analysis by data frame
#corresponds to Supplementary Figure 3.
combined_plot2 <- p1/p1_sc/p1_b
combined_plot2

#xxxxxxxxxxxxxxxxxxxxxxx REGIONAL TRENDS IN GEOLOGICAL RECORDxxxxxxxxxxxxxx
#Corresponds to figure 4, Results
regional<-read_excel("raw_ages.xlsx")# ADJUSTED TEMPORAL FRAME 

# regional figure
fNW_Car <- regional[regional$spot == "Northwestern Caribbean" , ] # This paper, Mexico
fSW_Car <- regional[regional$spot == "Southwestern Caribbean" , ] # Belize
fE_Car <- regional[regional$spot == "Eastern Caribbean" , ] # Saint Croix
fLA_Car <- regional[regional$spot == "Lesser Antilles"& regional$source =="Abdul et al.,16", ] # Barbados

summary(as.factor(fNW_Car$group))
summary(as.factor(fSW_Car$group))
summary(as.factor(fE_Car$group))
summary(as.factor(fLA_Car$group))

A<-ggplot(fNW_Car) +
  aes(x = t_ka) +
  geom_density(aes(y = after_stat(density), fill = group), alpha = 0.55, adjust = 0.09) +
  scale_fill_manual(values = c("palmata" = "#dc6601","Other species" = "gray")) +
  theme(strip.background = element_blank(), panel.background = element_blank(), legend.position = "none") +
  scale_x_continuous(limits = c(0, 14), breaks = seq(0, 14, 2))+
  scale_y_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 1/2))+
  theme(strip.background = element_blank(), panel.background = element_blank(),
        legend.position = "none", axis.title.x = element_blank(),
        axis.text.x = element_blank(), axis.ticks.x = element_blank())+
  annotate("rect", xmin = 0.71, xmax = 1.44, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") + #https://www.color-name.com/neutral-yellow.color
  annotate("rect", xmin = 1.46, xmax = 1.81, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") +
  annotate("rect", xmin = 2.47, xmax = 2.88, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") +
  annotate("rect", xmin = 4.97, xmax = 5.46, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27")+
  geom_segment(aes(x = 0.7, y = 1.25, xend = 1.45, yend = 1.25), color = "black",linewidth= 1.25)+
  annotate("text", x = 13.5, y = 1.25, label = "N_Yucatan", color="black")+
  geom_rug(aes(y = 1.5, colour = group), sides = "t", linewidth = 0.5, alpha = 0.5) +
  scale_colour_manual(values = c("palmata" = "#dc6601", "Other species" = "gray"))

B<-ggplot(fSW_Car) +
  aes(x = t_ka) +
  geom_density(aes(y = after_stat(density), fill = group), alpha = 0.55, adjust = 0.088) +
  scale_fill_manual(values = c("palmata" = "#dc6601","Other species" = "gray")) +
  theme(strip.background = element_blank(), panel.background = element_blank(), legend.position = "none") +
  scale_x_continuous(limits = c(0, 14), breaks = seq(0, 14, 2))+
  scale_y_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 1/2))+
  theme(strip.background = element_blank(), panel.background = element_blank(),
        legend.position = "none", axis.title.x = element_blank())+
  annotate("rect", xmin = 1.9, xmax = 2.72, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") + #https://www.color-name.com/neutral-yellow.color
  annotate("rect", xmin = 3.68, xmax = 4.2, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") +
  annotate("rect", xmin = 5.54, xmax = 6.0, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") +
  annotate("text", x = 13.5, y = 1.25, label = "Belize", color="black") +
  geom_rug(aes(y = 1.5, colour = group), sides = "t", linewidth = 0.5, alpha = 0.5) +
  scale_colour_manual(values = c("palmata" = "#dc6601", "Other species" = "gray"))

C<-ggplot(fE_Car) +
  aes(x = t_ka) +
  geom_density(aes(y = after_stat(density), fill = group), alpha = 0.55, adjust = 0.088, linetype = "solid") +
  scale_fill_manual(values = c("palmata" = "#dc6601","Other species" = "gray")) +
  theme(strip.background = element_blank(), panel.background = element_blank(), axis.title.x = element_blank(),legend.position = "none") +
  scale_x_continuous(limits = c(0, 14), breaks = seq(0, 14, 2))+
  scale_y_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 1/2))+
  annotate("rect", xmin = 2.0, xmax = 3.0, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") +
  annotate("rect", xmin = 5.2, xmax = 5.9, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27")+
  geom_segment(aes(x = 3.6, y = 1.25, xend = 4.8, yend = 1.25), color = "black",linewidth= 1.25)+
  geom_segment(aes(x = 1.0, y = 1.25, xend = 2.5, yend = 1.25), color = "black",linewidth= 1.25)+
  geom_segment(aes(x = 0.0, y = 1.25, xend = 0.3, yend = 1.25), color = "black",linewidth= 1.25)+
  annotate("text", x = 13.5, y = 1.25, label = "Saint Croix", color="black")+
  geom_rug(aes(y = 1.5, colour = group), sides = "t", linewidth = 0.5, alpha = 0.5) +
  scale_colour_manual(values = c("palmata" = "#dc6601", "Other species" = "gray"))

D<-ggplot(fLA_Car) +
  aes(x = t_ka) +
  geom_density(aes(y = after_stat(density), fill = group), alpha = 0.55, adjust = 0.088) +
  scale_fill_manual(values = c("palmata" = "#dc6601","Other species" = "gray")) +
  theme(strip.background = element_blank(), panel.background = element_blank(), legend.position = "none") +
  scale_x_continuous(limits = c(0,14), breaks = seq(0, 14, 2))+
  scale_y_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 1/2))+
  annotate("rect", xmin = 11.3, xmax = 11.02, ymin = -Inf, ymax = Inf, alpha = 0.05, fill = "#DAC778",colour ="#ee9f27") +  
  annotate("rect", xmin = 9.98, xmax = 10.35, ymin = -Inf, ymax = Inf, alpha = 0.025, fill = "#DAC778",colour ="#ee9f27")+  
  annotate("text", x = 13.5, y = 1.25, label = "Barbados", color="black")+
  annotate("text", x = 11.4, y = 1.25, label = "MWP-1B", color="black")+
  geom_rug(aes(y = 1.5, colour = group), sides = "t", size = 0.5, alpha = 0.5) +
  scale_colour_manual(values = c("palmata" = "#dc6601", "Other species" = "gray"))

# XXXXXXXXXXXXXXXXXX COMPOSITE KDE FOR ACROPORIDS XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
regional_palmata <- subset(regional, group == "palmata")

E<-ggplot(regional_palmata, aes(x = t_ka)) +
  geom_density(aes(y = after_stat(density), fill = source), alpha = 0.85, adjust = 0.088) +
  scale_fill_manual(values = c("This paper" = "#dc6601", "Gischler et al.,23" = "#ee9f27","Hubbard et al.,05;13" = "#FCA360", "Abdul et al.,16" = "#FFC125")) +
  theme(strip.background = element_blank(), panel.background = element_blank(), legend.position = "bottom") +
  labs(x = "t_ka", y = "Density (after stats)") +
  scale_x_continuous(limits = c(0,14), breaks = seq(0, 14, 2))+
  scale_y_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 1/2))

combined_plot <- A / B/ C/ D/ E
combined_plot 
